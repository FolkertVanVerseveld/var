#!/bin/bash -e
# Simple script that creates a Makefile for all c files that contain a main function
CC=gcc
if [ -z $INCPATH ]; then
	echo "INCPATH: not defined" 1>&2
	exit 1
fi
if [ -z $SMTPATH ]; then
	echo "SMTPATH: not defined" 1>&2
	exit 1
fi
cstd='-std=gnu99'
CFLAGS="-Wall -Wextra -pedantic -pthread $cstd -I$INCPATH $*"
INCS=
cat <<END >.gitignore
# Created by build script. Modifications are lost when rerun.
.gitignore
Makefile
*.tmp
# VIM
*.swp
*.vim
# CC
*.o
END
CFLAGS="$CFLAGS $INCS"
libs='sdl2 glew freealut vorbisfile'
if ! hash pkg-config 2>/dev/null; then
	echo "pkg-config is missing" 1>&2
	exit 1
fi
CFLAGS="$CFLAGS $(pkg-config --cflags $libs)"
LDLIBS="$(pkg-config --libs $libs) -lSDL2_image -lpthread -lm"
# Write phony target and overwrite some builtin variables
cat <<END >Makefile
.PHONY: default clean

CC?=$CC
CFLAGS=$CFLAGS
LDLIBS=$LDLIBS

END

printf "MAIN=" >>Makefile
# Filter Binary.* and strip extensions
MAIN=$(grep -r 'int main' | sed -e '/Binary.*/d' -e 's/:.*//g')
# Write elf executables
for i in $MAIN; do
	bin="${i/%.c/}"
	echo "$bin" >>.gitignore
	printf ' \\\n\t%s' "$bin" >>Makefile
done
# Write object files
printf '\nOBJECTS=' >>Makefile
FILES=$(find . -name '*.c')
FILES="${FILES//.\//}"
for i in $FILES; do
	printf ' \\\n\t%s' "${i/%.c/.o}" >>Makefile
done
for i in $MAIN; do
	FILES="${FILES/$i/}"
done
printf '\nLIST=' >>Makefile
for i in $FILES; do
	printf ' \\\n\t%s' "${i/%.c/.o}" >>Makefile
done
cat <<'EOF' >>Makefile

default: $(OBJECTS) $(MAIN)
EOF
for i in $MAIN; do
	printf '%s: %s $(LIST) '$SMTPATH'\n' "${i/%.c/}" "${i/%.c/.o}" >>Makefile
done
cat <<'EOF' >>Makefile
%.o: %.c
	$(CC) -c $< -o $@ $(CFLAGS)
clean:
	rm -f $(MAIN) $(OBJECTS)
EOF
